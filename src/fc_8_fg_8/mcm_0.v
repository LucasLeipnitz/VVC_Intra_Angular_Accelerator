/*------------------------------------------------------------------------------
 * This code was generated by Spiral Multiplier Block Generator, www.spiral.net
 * Copyright (c) 2006, Carnegie Mellon University
 * All rights reserved.
 * The code is distributed under a BSD style license
 * (see http://www.opensource.org/licenses/bsd-license.php)
 *------------------------------------------------------------------------------ */

module multiplier_block (
    X,
    Y1,
    Y2,
    Y3,
    Y4,
    Y5,
    Y6,
    Y7,
    Y8
);

  // Port mode declarations:
  input  signed  [31:0] X;
  output signed  [31:0]
    Y1,
    Y2,
    Y3,
    Y4,
    Y5,
    Y6,
    Y7,
    Y8;

  wire [31:0] Y [0:7];

  assign Y1 = Y[0];
  assign Y2 = Y[1];
  assign Y3 = Y[2];
  assign Y4 = Y[3];
  assign Y5 = Y[4];
  assign Y6 = Y[5];
  assign Y7 = Y[6];
  assign Y8 = Y[7];

  //Multipliers:

  wire signed [32:0]
    w1,
    w4,
    w3,
    w5,
    w8,
    w7,
    w12,
    w20,
    w28,
    w2,
    w2_,
    w10,
    w10_,
    w6,
    w6_,
    w4_;

  assign w1 = X;
  assign w4 = w1 << 2;
  assign w3 = w4 - w1;
  assign w5 = w1 + w4;
  assign w8 = w1 << 3;
  assign w7 = w8 - w1;
  assign w12 = w3 << 2;
  assign w20 = w5 << 2;
  assign w28 = w7 << 2;
  assign w2 = w1 << 1;
  assign w2_ = -1 * w2;
  assign w10 = w5 << 1;
  assign w10_ = -1 * w10;
  assign w6 = w3 << 1;
  assign w6_ = -1 * w6;
  assign w4_ = -1 * w4;

  assign Y[0] = w4[32:1];
  assign Y[1] = w12[32:1];
  assign Y[2] = w20[32:1];
  assign Y[3] = w28[32:1];
  assign Y[4] = w2_[32:1];
  assign Y[5] = w10_[32:1];
  assign Y[6] = w6_[32:1];
  assign Y[7] = w4_[32:1];

endmodule //multiplier_block

